/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export interface BlogInterface extends utils.Interface {
  functions: {
    "categories()": FunctionFragment;
    "description()": FunctionFragment;
    "image()": FunctionFragment;
    "like()": FunctionFragment;
    "owner()": FunctionFragment;
    "social()": FunctionFragment;
    "title()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "categories"
      | "description"
      | "image"
      | "like"
      | "owner"
      | "social"
      | "title"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "categories",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "description",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "image", values?: undefined): string;
  encodeFunctionData(functionFragment: "like", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "social", values?: undefined): string;
  encodeFunctionData(functionFragment: "title", values?: undefined): string;

  decodeFunctionResult(functionFragment: "categories", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "description",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "image", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "like", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "social", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "title", data: BytesLike): Result;

  events: {};
}

export interface Blog extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BlogInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    categories(overrides?: CallOverrides): Promise<[string]>;

    description(overrides?: CallOverrides): Promise<[string]>;

    image(overrides?: CallOverrides): Promise<[string]>;

    like(overrides?: CallOverrides): Promise<[BigNumber]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    social(overrides?: CallOverrides): Promise<[string]>;

    title(overrides?: CallOverrides): Promise<[string]>;
  };

  categories(overrides?: CallOverrides): Promise<string>;

  description(overrides?: CallOverrides): Promise<string>;

  image(overrides?: CallOverrides): Promise<string>;

  like(overrides?: CallOverrides): Promise<BigNumber>;

  owner(overrides?: CallOverrides): Promise<string>;

  social(overrides?: CallOverrides): Promise<string>;

  title(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    categories(overrides?: CallOverrides): Promise<string>;

    description(overrides?: CallOverrides): Promise<string>;

    image(overrides?: CallOverrides): Promise<string>;

    like(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    social(overrides?: CallOverrides): Promise<string>;

    title(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    categories(overrides?: CallOverrides): Promise<BigNumber>;

    description(overrides?: CallOverrides): Promise<BigNumber>;

    image(overrides?: CallOverrides): Promise<BigNumber>;

    like(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    social(overrides?: CallOverrides): Promise<BigNumber>;

    title(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    categories(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    description(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    image(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    like(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    social(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    title(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
