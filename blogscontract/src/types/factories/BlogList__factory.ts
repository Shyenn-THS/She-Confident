/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BlogList, BlogListInterface } from "../BlogList";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "owner",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "categories",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "image",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "social",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "ownerWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "blogAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "BlogCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_blogTitle",
        type: "string",
      },
      {
        internalType: "string",
        name: "_blogDescription",
        type: "string",
      },
      {
        internalType: "string",
        name: "_blogOwner",
        type: "string",
      },
      {
        internalType: "string",
        name: "_blogCategories",
        type: "string",
      },
      {
        internalType: "string",
        name: "_blogImage",
        type: "string",
      },
      {
        internalType: "string",
        name: "_blogSocial",
        type: "string",
      },
    ],
    name: "createBlog",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "publishedBlogs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPublishedBlogs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b8e806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000465760003560e01c80630887b043146200004b57806364b109ca1462000061578063b3b9c15e1462000091575b600080fd5b6000546040519081526020015b60405180910390f35b6200007862000072366004620001c6565b620000aa565b6040516001600160a01b03909116815260200162000058565b620000a8620000a23660046200028b565b620000d5565b005b60008181548110620000bb57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000868686868686604051620000eb90620001b8565b620000fc96959493929190620003e3565b604051809103906000f08015801562000119573d6000803e3d6000fd5b50600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b038316179055604051909150429033907f52b860e312e3448d1e105336c69bda809652e0e27e8337a7f9a276fe45c531bf90620001a7908b908b908b908b908b908b908b9062000471565b60405180910390a350505050505050565b610649806200051083390190565b600060208284031215620001d957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200020857600080fd5b813567ffffffffffffffff80821115620002265762000226620001e0565b604051601f8301601f19908116603f01168101908282118183101715620002515762000251620001e0565b816040528381528660208588010111156200026b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c08789031215620002a557600080fd5b863567ffffffffffffffff80821115620002be57600080fd5b620002cc8a838b01620001f6565b97506020890135915080821115620002e357600080fd5b620002f18a838b01620001f6565b965060408901359150808211156200030857600080fd5b620003168a838b01620001f6565b955060608901359150808211156200032d57600080fd5b6200033b8a838b01620001f6565b945060808901359150808211156200035257600080fd5b620003608a838b01620001f6565b935060a08901359150808211156200037757600080fd5b506200038689828a01620001f6565b9150509295509295509295565b6000815180845260005b81811015620003bb576020818501810151868301820152016200039d565b81811115620003ce576000602083870101525b50601f01601f19169290920160200192915050565b60c081526000620003f860c083018962000393565b82810360208401526200040c818962000393565b9050828103604084015262000422818862000393565b9050828103606084015262000438818762000393565b905082810360808401526200044e818662000393565b905082810360a084015262000464818562000393565b9998505050505050505050565b60e0815260006200048660e083018a62000393565b82810360208401526200049a818a62000393565b90508281036040840152620004b0818962000393565b90508281036060840152620004c6818862000393565b90508281036080840152620004dc818762000393565b905082810360a0840152620004f2818662000393565b91505060018060a01b03831660c08301529897505050505050505056fe608060405234801561001057600080fd5b5060405161064938038061064983398101604081905261002f91610150565b600061003b87826102cd565b50600161004886826102cd565b50600261005585826102cd565b50600361006284826102cd565b50600461006f83826102cd565b50600561007c82826102cd565b505060006007555061038c9350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126100b557600080fd5b81516001600160401b03808211156100cf576100cf61008e565b604051601f8301601f19908116603f011681019082821181831017156100f7576100f761008e565b8160405283815260209250868385880101111561011357600080fd5b600091505b838210156101355785820183015181830184015290820190610118565b838211156101465760008385830101525b9695505050505050565b60008060008060008060c0878903121561016957600080fd5b86516001600160401b038082111561018057600080fd5b61018c8a838b016100a4565b975060208901519150808211156101a257600080fd5b6101ae8a838b016100a4565b965060408901519150808211156101c457600080fd5b6101d08a838b016100a4565b955060608901519150808211156101e657600080fd5b6101f28a838b016100a4565b9450608089015191508082111561020857600080fd5b6102148a838b016100a4565b935060a089015191508082111561022a57600080fd5b5061023789828a016100a4565b9150509295509295509295565b600181811c9082168061025857607f821691505b60208210810361027857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102c857600081815260208120601f850160051c810160208610156102a55750805b601f850160051c820191505b818110156102c4578281556001016102b1565b5050505b505050565b81516001600160401b038111156102e6576102e661008e565b6102fa816102f48454610244565b8461027e565b602080601f83116001811461032f57600084156103175750858301515b600019600386901b1c1916600185901b1785556102c4565b600085815260208120601f198616915b8281101561035e5788860151825594840194600190910190840161033f565b508582101561037c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6102ae8061039b6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100b0578063a523b88a146100b8578063f3ccaac0146100ce578063fdb33063146100d657600080fd5b80634a79d50c146100825780637233f2be146100a05780637284e416146100a8575b600080fd5b61008a6100de565b60405161009791906101c3565b60405180910390f35b61008a61016c565b61008a610179565b61008a610186565b6100c0610193565b604051908152602001610097565b61008a6101a9565b61008a6101b6565b600080546100eb90610218565b80601f016020809104026020016040519081016040528092919081815260200182805461011790610218565b80156101645780601f1061013957610100808354040283529160200191610164565b820191906000526020600020905b81548152906001019060200180831161014757829003601f168201915b505050505081565b600580546100eb90610218565b600180546100eb90610218565b600280546100eb90610218565b600060075460016101a49190610252565b905090565b600480546100eb90610218565b600380546100eb90610218565b600060208083528351808285015260005b818110156101f0578581018301518582016040015282016101d4565b81811115610202576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061022c57607f821691505b60208210810361024c57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561027357634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122061e9bd30b854a5d9efb69d261c056d32aa49d1b569d3fe50783d86fd0e3fe34c64736f6c634300080f0033a2646970667358221220d0236c70648c64bafb9275c448a98533465e29eda8d40b3edfbb1b0ff23a7eee64736f6c634300080f0033";

type BlogListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlogListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlogList__factory extends ContractFactory {
  constructor(...args: BlogListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BlogList> {
    return super.deploy(overrides || {}) as Promise<BlogList>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BlogList {
    return super.attach(address) as BlogList;
  }
  override connect(signer: Signer): BlogList__factory {
    return super.connect(signer) as BlogList__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlogListInterface {
    return new utils.Interface(_abi) as BlogListInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlogList {
    return new Contract(address, _abi, signerOrProvider) as BlogList;
  }
}
