/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Blog, BlogInterface } from "../Blog";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "blogTitle",
        type: "string",
      },
      {
        internalType: "string",
        name: "blogDescription",
        type: "string",
      },
      {
        internalType: "string",
        name: "blogOwner",
        type: "string",
      },
      {
        internalType: "string",
        name: "blogCategories",
        type: "string",
      },
      {
        internalType: "string",
        name: "blogImage",
        type: "string",
      },
      {
        internalType: "string",
        name: "blogSocial",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "categories",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "image",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "like",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "social",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "title",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161064338038061064383398101604081905261002f9161014a565b600061003b87826102c7565b50600161004886826102c7565b50600261005585826102c7565b50600361006284826102c7565b50600461006f83826102c7565b50600561007c82826102c7565b50505050505050610386565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126100af57600080fd5b81516001600160401b03808211156100c9576100c9610088565b604051601f8301601f19908116603f011681019082821181831017156100f1576100f1610088565b8160405283815260209250868385880101111561010d57600080fd5b600091505b8382101561012f5785820183015181830184015290820190610112565b838211156101405760008385830101525b9695505050505050565b60008060008060008060c0878903121561016357600080fd5b86516001600160401b038082111561017a57600080fd5b6101868a838b0161009e565b9750602089015191508082111561019c57600080fd5b6101a88a838b0161009e565b965060408901519150808211156101be57600080fd5b6101ca8a838b0161009e565b955060608901519150808211156101e057600080fd5b6101ec8a838b0161009e565b9450608089015191508082111561020257600080fd5b61020e8a838b0161009e565b935060a089015191508082111561022457600080fd5b5061023189828a0161009e565b9150509295509295509295565b600181811c9082168061025257607f821691505b60208210810361027257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102c257600081815260208120601f850160051c8101602086101561029f5750805b601f850160051c820191505b818110156102be578281556001016102ab565b5050505b505050565b81516001600160401b038111156102e0576102e0610088565b6102f4816102ee845461023e565b84610278565b602080601f83116001811461032957600084156103115750858301515b600019600386901b1c1916600185901b1785556102be565b600085815260208120601f198616915b8281101561035857888601518255948401946001909101908401610339565b50858210156103765787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6102ae806103956000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100b0578063a523b88a146100b8578063f3ccaac0146100ce578063fdb33063146100d657600080fd5b80634a79d50c146100825780637233f2be146100a05780637284e416146100a8575b600080fd5b61008a6100de565b60405161009791906101c3565b60405180910390f35b61008a61016c565b61008a610179565b61008a610186565b6100c0610193565b604051908152602001610097565b61008a6101a9565b61008a6101b6565b600080546100eb90610218565b80601f016020809104026020016040519081016040528092919081815260200182805461011790610218565b80156101645780601f1061013957610100808354040283529160200191610164565b820191906000526020600020905b81548152906001019060200180831161014757829003601f168201915b505050505081565b600580546100eb90610218565b600180546100eb90610218565b600280546100eb90610218565b600060075460016101a49190610252565b905090565b600480546100eb90610218565b600380546100eb90610218565b600060208083528351808285015260005b818110156101f0578581018301518582016040015282016101d4565b81811115610202576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061022c57607f821691505b60208210810361024c57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561027357634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212208c73e54dea78ba41c1636eb113e9c63738f766d5a39dab9353e5e8593f64c88664736f6c634300080f0033";

type BlogConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlogConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Blog__factory extends ContractFactory {
  constructor(...args: BlogConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    blogTitle: PromiseOrValue<string>,
    blogDescription: PromiseOrValue<string>,
    blogOwner: PromiseOrValue<string>,
    blogCategories: PromiseOrValue<string>,
    blogImage: PromiseOrValue<string>,
    blogSocial: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Blog> {
    return super.deploy(
      blogTitle,
      blogDescription,
      blogOwner,
      blogCategories,
      blogImage,
      blogSocial,
      overrides || {}
    ) as Promise<Blog>;
  }
  override getDeployTransaction(
    blogTitle: PromiseOrValue<string>,
    blogDescription: PromiseOrValue<string>,
    blogOwner: PromiseOrValue<string>,
    blogCategories: PromiseOrValue<string>,
    blogImage: PromiseOrValue<string>,
    blogSocial: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      blogTitle,
      blogDescription,
      blogOwner,
      blogCategories,
      blogImage,
      blogSocial,
      overrides || {}
    );
  }
  override attach(address: string): Blog {
    return super.attach(address) as Blog;
  }
  override connect(signer: Signer): Blog__factory {
    return super.connect(signer) as Blog__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlogInterface {
    return new utils.Interface(_abi) as BlogInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Blog {
    return new Contract(address, _abi, signerOrProvider) as Blog;
  }
}
